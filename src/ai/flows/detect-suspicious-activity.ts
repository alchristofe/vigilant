// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Detects suspicious activities from a webcam feed during online exams.
 *
 * - detectSuspiciousActivity - A function that detects suspicious activities.
 * - DetectSuspiciousActivityInput - The input type for the detectSuspiciousActivity function.
 * - DetectSuspiciousActivityOutput - The return type for the detectSuspiciousActivity function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetectSuspiciousActivityInputSchema = z.object({
  webcamFeedDataUri: z
    .string()
    .describe(
      "A data URI of the webcam feed, including MIME type and Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  context: z
    .string()
    .optional()
    .describe('Additional context about the exam or student.'),
});
export type DetectSuspiciousActivityInput = z.infer<
  typeof DetectSuspiciousActivityInputSchema
>;

const DetectSuspiciousActivityOutputSchema = z.object({
  isSuspicious: z.boolean().describe('Whether suspicious activity is detected.'),
  activityDescription: z.string().describe('Description of the suspicious activity.'),
  suspicionLevel: z.number().describe('A numerical value indicating the level of suspicion (0-100).'),
});
export type DetectSuspiciousActivityOutput = z.infer<
  typeof DetectSuspiciousActivityOutputSchema
>;

export async function detectSuspiciousActivity(
  input: DetectSuspiciousActivityInput
): Promise<DetectSuspiciousActivityOutput> {
  return detectSuspiciousActivityFlow(input);
}

const detectSuspiciousActivityPrompt = ai.definePrompt({
  name: 'detectSuspiciousActivityPrompt',
  input: {schema: DetectSuspiciousActivityInputSchema},
  output: {schema: DetectSuspiciousActivityOutputSchema},
  prompt: `You are an AI assistant specialized in detecting suspicious activities during online exams.

You will receive a webcam feed and any additional context about the exam or student. Your task is to analyze the webcam feed for any signs of cheating or unauthorized behavior. Actions such as excessive looking away, the presence of other people, or unauthorized objects should be flagged as suspicious.

Based on your analysis, determine whether suspicious activity is present. Provide a description of the activity and assign a suspicion level from 0 to 100.

Webcam Feed: {{media url=webcamFeedDataUri}}
Context: {{{context}}}

Respond in JSON format.
`,
});

const detectSuspiciousActivityFlow = ai.defineFlow(
  {
    name: 'detectSuspiciousActivityFlow',
    inputSchema: DetectSuspiciousActivityInputSchema,
    outputSchema: DetectSuspiciousActivityOutputSchema,
  },
  async input => {
    const {output} = await detectSuspiciousActivityPrompt(input);
    return output!;
  }
);
